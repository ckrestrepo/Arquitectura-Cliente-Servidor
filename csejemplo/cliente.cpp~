/*
cliente.cpp
*/
#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <string.h>
#include <malloc.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <unistd.h>
using namespace std;

#define MIPUERTO 9090
#define MAXLONGITUD 128

int nosocket, numbytes;
//char msj[MAXLONGITUD];   
char const host_servidor[]="127.0.0.1";
struct hostent *host_entrante;
struct sockaddr_in servidor;
  
void iniciar();
void conectar();
string recibir(int);
void enviar(int, string);

int main()
{
  
   iniciar();
   conectar();  
   cout<<"Mensaje: "<<recibir(nosocket)<<endl;

   //Nuevo mensaje al servidor

   string msjenv;
   char msj[MAXLONGITUD];
   
   do{
     msj[0]='\0';
     cout<<"Digite numero: ";
     cin>>msjenv;
     enviar(nosocket,msjenv);
     cout<<"Mensaje: "<<recibir(nosocket)<<endl;
   }while(msjenv != "fin");
   
   close(nosocket);

}

void iniciar(){
host_entrante=gethostbyname(host_servidor);
  if (host_entrante==NULL)
  {       
      /* llamada a gethostbyname() */
      cout<<"Error al recibir host "<< endl;
      exit(-1);
   }

   nosocket=socket(AF_INET, SOCK_STREAM, 0);
   if(nosocket==-1)
   {
     cout<<"Error en conexion 1. "<<endl; 
     exit(-1);
   }

   servidor.sin_family= AF_INET;
   servidor.sin_port = htons(MIPUERTO);
   servidor.sin_addr = *((struct in_addr *)host_entrante->h_addr);
   //he pasa la informacion de *he hacia h_addr
   bzero(&(servidor.sin_zero),8);
  }

void conectar(){
    
   if (connect(nosocket, (struct sockaddr *)&servidor, sizeof(struct sockaddr))==-1)
   {
     cout<<"Error en conexion 2"<<endl;
     exit(-1);
   }
}

string recibir(int s){
  char msj[MAXLONGITUD];
  string smsj="";
  int numbytes=recv(s,msj,MAXLONGITUD,0);
      if (numbytes==-1)
      {
       cout<<"Error al recibir. "<< endl;
      }
      if(numbytes==0)
      {
       cout<<"Conexion finalizada"<<endl;
      }
      if(numbytes>0)
      {
        msj[numbytes]='\0';
        //cout<<"Mensaje del cliente: "<<msj<<endl;
        smsj=(string)msj;
      }
     return smsj;
}

void enviar(int s, string cad){
  char msj[MAXLONGITUD];
  strcpy(msj, cad.c_str());
  send(s, msj, cad.size(),0); 
}







